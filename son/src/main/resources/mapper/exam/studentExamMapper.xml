<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.son.app.exam.mapper.StudentExamMapper">

    <!-- 시험 목록에서 한 페이지에 최대 5개의 게시글 표시  -->
    <select id="studentExamList" resultType="ExamListVO">
        SELECT *
        FROM ( SELECT ROW_NUMBER() OVER(ORDER BY test.test_number DESC) AS row_num
                    , test.test_number
                    , participate_number
                    , participate_status
                    , total_score
                    , test_title
                    , exam_date
               FROM participate
                        JOIN test
                             ON test.test_number = participate.test_number
               <where>
                   test.lecture_number = #{lectureNumber}
                   <if test="testTitle != null and testTitle != ''">
                       AND test_title LIKE '%' || #{testTitle} || '%'
                   </if>
                   <choose>
                       <when test="participateStatus == '응시 완료'">
                           AND participate_status = '응시 완료'
                       </when>
                       <when test="participateStatus == '미응시'">
                           AND participate_status = '미응시'
                       </when>
                   </choose>
               </where>
             )
        WHERE row_num BETWEEN #{startRow} AND #{endRow}
    </select>
    
    <!-- 시험 목록에 출력되는 행의 개수    -->
    <select id="studentExamCount" resultType="int">
        SELECT COUNT(*)
        FROM participate
        JOIN test
             ON test.test_number = participate.test_number
        <where>
            test.lecture_number = #{lectureNumber}
            <if test="testTitle != null and testTitle != ''">
                AND test_title LIKE '%' || #{testTitle} || '%'
            </if>
            <choose>
                <when test="participateStatus != '전체' and participateStatus == '응시 완료'">
                    AND participate_status = '응시 완료'
                </when>
                <when test="participateStatus != '' and participateStatus == '미응시'">
                    AND participate_status = '미응시'
                </when>
            </choose>
        </where>
    </select>

    <resultMap id="studentExamInfoMap" type="ExamInfoVO">
        <id property="questionNumber" column="question_number"></id>
        <association property="attachmentFileVO" javaType="AttachmentFileVO" column="question_number" select="examAttachmentFile" />
    </resultMap>

    <!--  출제된 시험의 문제 조회 ( + 세부 과목 이름, 제한 시간(분))    -->
    <select id="studentExamInfo" resultMap="studentExamInfoMap">
        SELECT de_sub_name_by_lecture(lecture_number) AS detail_subject_name
            , limit_time
            , question.question_number
            , question_type_code
            , text
            , score
            , answer as real_answer
            , option1 AS option_one
            , option2 AS option_two
            , option3 AS option_three
            , option4 AS option_four
            , option5 AS option_five
        FROM paper_content
        JOIN question
            ON paper_content.question_number = question.question_number
        JOIN test
            ON paper_content.paper_number = test.paper_number
        WHERE test.test_number = #{testNumber}
    </select>

    <!-- 출제된 시험의 첨부파일  -->
    <select id="examAttachmentFile" resultType="AttachmentFileVO">
        SELECT original_file_name
             , file_path
        FROM attachment_file
        WHERE question_number = #{questionNumber}
    </select>

    <!-- 시험 제출 후 데이터베이스에 저장    -->
    <insert id="getExamResults" parameterType="GradingResult">
            INSERT INTO grading_result (grading_result_number
                , participate_number
                , question_number
                , answer
                , answer_status
            ) VALUES (grade_result_seq.NEXTVAL
                , #{participateNumber}
                , #{questionNumber}
                , #{studentAnswer}
                , CASE
                    WHEN #{studentAnswer} = (
                        SELECT answer
                        FROM question
                        WHERE question_number = #{questionNumber}
                    ) THEN 'O'
                    ELSE 'X'
                  END
            )
    </insert>

    <update id="modifyParticipateStatus">
        UPDATE participate
        SET participate_status = '응시 완료'
          , total_score =
            (SELECT DISTINCT NVL(SUM(paper_content.score), 0) AS total_score
             FROM grading_result
                      JOIN paper_content
                           ON grading_result.question_number = paper_content.question_number
             WHERE grading_result.participate_number = #{participateNumber} AND grading_result.answer_status = 'O'
            )
        WHERE participate_number = #{participateNumber}
    </update>
</mapper>