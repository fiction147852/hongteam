<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.son.app.task.mapper.TaskMapper">
	<select id="selectTaskAll" resultType="TaskVO">
        SELECT task_number,
               title,
               description,
               post_date,
               submit_deadline,
               lecture_number
        FROM (
            SELECT ROW_NUMBER() OVER (ORDER BY task_number) AS rn,
                   task_number,
                   title,
                   description,
                   post_date,
                   submit_deadline,
                   lecture_number
            FROM task
            WHERE lecture_number = #{lectureNumber}
        ) t
        WHERE rn BETWEEN #{start} AND #{end}
    </select>
    
    <select id="countTasks" resultType="int">
        SELECT COUNT(*)
        FROM task
        WHERE lecture_number = #{lectureNumber}
    </select>
	
	<select id="selectTaskInfo" resultMap="taskWithFilesResultMap">
	    SELECT 
	        t.task_number,
	        t.title,
	        CAST(t.description AS VARCHAR(4000)) as description,
	        t.post_date,
	        t.submit_deadline,
	        t.lecture_number,
	        f.attachment_file_number,
	        f.original_file_name,
	        f.save_file_name,
	        f.file_size,
	        f.is_deleted
	    FROM task t
	    	LEFT OUTER JOIN attachment_file f 
	    		ON t.task_number = f.task_number
	    WHERE t.task_number = #{taskNumber}
	</select>

	<resultMap id="taskWithFilesResultMap" type="TaskVO">
	    <id property="taskNumber" column="task_number"/>
	    <result property="title" column="title"/>
	    <result property="description" column="description" jdbcType="VARCHAR" javaType="String"/>
	    <result property="postDate" column="post_date" jdbcType="DATE" javaType="Date"/>
	    <result property="submitDeadline" column="submit_deadline" jdbcType="DATE" javaType="Date"/>
	    <result property="lectureNumber" column="lecture_number"/>
	    
	    <collection property="fileList" ofType="FileRequest" javaType="list">
	        <id property="attachmentFileNumber" column="attachment_file_number"/>
	        <result property="originalFileName" column="original_file_name"/>
	        <result property="saveFileName" column="save_file_name"/>
	        <result property="fileSize" column="file_size"/>
	        <result property="isDeleted" column="is_deleted"/>
	    </collection>
	</resultMap>
	
	<insert id="insertTaskInfo" parameterType="TaskVO">
		<selectKey keyProperty="taskNumber" resultType="int" order="BEFORE">
        	SELECT NVL(MAX(task_number), 0) + 1 FROM task
    	</selectKey>
		INSERT INTO task
				(
					task_number,
					title,
					description,
					post_date,
					submit_deadline,
					lecture_number
				)
			VALUES
				(
					#{taskNumber},
					#{title},
					#{description},
					sysdate,
					#{submitDeadline},
					#{lectureNumber}
				)
				
	</insert>
	
	<insert id="insertTaskSubmit" parameterType="TaskVO">
	    <selectKey keyProperty="taskSubmitNumber" resultType="int" order="BEFORE">
	        SELECT NVL(MAX(task_submit_number), 0) + 1 FROM task_submit
	    </selectKey>
	    INSERT INTO task_submit (
	        task_submit_number,
	        student_number,
	        task_number,
	        task_submit_code,
	        feedback_code
	    ) VALUES (
	        #{taskSubmitNumber},
	        #{studentNumber},
	        #{taskNumber},
	        '미제출',
	        '피드백 미완료'
	    )
	</insert>
	
	<select id="getStudentNumbersByLecture" resultType="int">
	    SELECT student_number
	    FROM registration
	    WHERE lecture_number = #{lectureNumber}
	</select>
	

	<update id="updateTaskInfo">
		UPDATE task
		SET
			title = #{title}
		  , description = #{description}
		  , submit_deadline = #{submitDeadline}
		  , lecture_number = #{lectureNumber}
		WHERE task_number = #{taskNumber}
	</update>
	
	<delete id="deleteTaskInfo" parameterType="int">
		DELETE FROM task
		WHERE task_number = #{taskNumber}
	</delete>
	
	<select id="selectSubmittedStudents" resultType="TaskVO">
		SELECT
			t.rn,
			t.task_number,
			t.title,
			t.post_date,
			t.submit_deadline,
			ts.task_submit_code AS taskSubmitStatus,
			ts.feedback_code AS feedbackStatus,
			ts.task_submit_number,
			s.name AS studentName,
			s.student_number
		FROM
			(
				SELECT
				ROW_NUMBER() OVER (ORDER BY task_number) AS rn,
				task_number,
				title,
				post_date,
				submit_deadline,
				lecture_number
				FROM
				task
				WHERE
				lecture_number = #{lectureNumber}
			) t
				JOIN (
				    SELECT task_number, student_number, MAX(task_submit_number) as max_submit_number
				    FROM task_submit
				    GROUP BY task_number, student_number
				) latest_submit ON t.task_number = latest_submit.task_number
				JOIN task_submit ts ON latest_submit.task_number = ts.task_number 
				    AND latest_submit.student_number = ts.student_number 
				    AND latest_submit.max_submit_number = ts.task_submit_number
				JOIN registration r ON ts.student_number = r.student_number AND t.lecture_number = r.lecture_number
				JOIN student s ON r.student_number = s.student_number
			WHERE
				t.rn BETWEEN #{start} AND #{end}
				AND t.task_number = #{taskNumber}
			ORDER BY
				t.rn, s.student_number
	</select>
	
	<select id="countSubmittedStudents" resultType="int">
		SELECT COUNT(*)
		FROM task_submit
		WHERE task_number = #{taskNumber}
	</select>
	
	<select id="selectSubmittedInfo" resultMap="submittedTaskWithFilesResultMap">
	    SELECT 
	        ts.task_submit_number,
	        ts.task_number,
	        ts.feedback,
	        ts.feedback_code AS feedbackStatus,
	        s.name AS studentName,
	        t.post_date,
	        t.submit_deadline,
	        t.title,
	        f.attachment_file_number,
	        f.original_file_name,
	        f.save_file_name,
	        f.file_size,
	        f.is_deleted
	    FROM task_submit ts
	    JOIN task t ON ts.task_number = t.task_number
	    JOIN registration r ON ts.student_number = r.student_number AND t.lecture_number = r.lecture_number
	    JOIN student s ON r.student_number = s.student_number
	    LEFT OUTER JOIN attachment_file f ON ts.task_submit_number = f.task_submit_number
	    WHERE ts.task_submit_number = #{taskSubmitNumber}
	</select>
	
	<resultMap id="submittedTaskWithFilesResultMap" type="TaskVO">
	    <id property="taskSubmitNumber" column="task_submit_number"/>
	    <result property="taskNumber" column="task_number"/>
	    <result property="feedback" column="feedback"/>
	    <result property="feedbackStatus" column="feedback_code"/>
	    <result property="studentName" column="student_name"/>
	    <result property="title" column="title"/>
	    <result property="postDate" column="post_date"/>
	    <result property="submitDeadline" column="submit_deadline"/>
	    
	    <collection property="fileList" ofType="FileRequest" javaType="list">
	        <id property="attachmentFileNumber" column="attachment_file_number"/>
	        <result property="originalFileName" column="original_file_name"/>
	        <result property="saveFileName" column="save_file_name"/>
	        <result property="fileSize" column="file_size"/>
	        <result property="isDeleted" column="is_deleted"/>
	    </collection>
	</resultMap>
	
				
</mapper>