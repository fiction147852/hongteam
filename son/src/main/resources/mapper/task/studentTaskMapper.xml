<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.son.app.task.mapper.StudentTaskMapper">
    <!-- 시험 목록에서 한 페이지에 최대 5개의 게시글 표시  -->
    <select id="studentTaskList" resultType="TaskListVO">
        SELECT *
        FROM (SELECT ROW_NUMBER() OVER(ORDER BY task.task_number DESC) AS row_num
                , task.task_number
                , title
                , post_date
                , submit_deadline
                , task_submit_code AS task_submit_status
                , feedback_code AS feedback_status
                , feedback
              FROM task_submit
              JOIN task
                  ON task.task_number = task_submit.task_number
              <where>
                  lecture_number = #{lectureNumber} AND student_number = #{studentNumber}
                  <if test="title != null and title != ''">
                      AND title LIKE '%' || #{title} || '%'
                  </if>
                  <choose>
                      <when test="taskSubmitStatus == '제출 완료'">
                          AND task_submit_code = '제출 완료'
                      </when>
                      <when test="taskSubmitStatus == '미제출'">
                          AND task_submit_code = '미제출'
                      </when>
                  </choose>
              </where>
              )
        WHERE row_num BETWEEN #{startRow} AND #{endRow}
    </select>

    <!-- 과제 목록에 출력되는 행의 개수 -->
    <select id="studentTaskCount" resultType="int">
        SELECT COUNT(*)
        FROM task_submit
        JOIN task
            ON task.task_number = task_submit.task_number
        <where>
            lecture_number = #{lectureNumber} AND student_number = #{studentNumber}
            <if test="title != null and title != ''">
                AND title LIKE '%' || #{title} || '%'
            </if>
            <choose>
                <when test="taskSubmitStatus == '제출 완료'">
                    AND task_submit_code = '제출 완료'
                </when>
                <when test="taskSubmitStatus == '미제출'">
                    AND task_submit_code = '미제출'
                </when>
            </choose>
        </where>
    </select>

    <resultMap id="studentTaskInfoMap" type="TaskListVO">
        <id property="taskNumber" column="task_number"></id>
        <collection property="attachmentFileVOList" ofType="AttachmentFileVO" javaType="ArrayList" column="task_number" select="studentTaskAttachmentFile"></collection>
    </resultMap>

    <!-- 과제 상세 정보  -->
    <select id="studentTaskInfo" resultMap="studentTaskInfoMap">
        SELECT task.task_number
             , title
             , post_date
             , submit_deadline
             , description
             , lecture_number
        FROM task
        JOIN task_submit
            ON task.task_number = task_submit.task_number
        WHERE task_submit.task_number = #{taskNumber} AND student_number = #{studentNumber}
    </select>

    <!-- 특정 과제의 첨부파일    -->
    <select id="studentTaskAttachmentFile" resultType="AttachmentFileVO">
        SELECT *
        FROM attachment_file
        WHERE task_number = #{taskNumber}
    </select>

    <!-- 과제 제출 상태   -->
    <update id="studentTaskStatus">
        UPDATE task_submit
        SET task_submit_code = '제출 완료'
        WHERE task_number = #{taskNumber} AND student_number = #{studentNumber}
    </update>

    <!-- 업로드 할 파일 정보 저장    -->
    <insert id="studentTaskUploadFile" parameterType="AttachmentFileVO">
        <selectKey keyProperty="attachmentFileNumber" resultType="Integer" order="BEFORE">
            SELECT NVL(MAX(attachment_file_number) + 1, 1)
            FROM attachment_file
        </selectKey>

        INSERT INTO attachment_file(attachment_file_number
                        , task_submit_number
                        , original_file_name
                        , save_file_name
                        , file_size
        )VALUES (#{attachmentFileNumber}
           , (SELECT task_submit_number
              FROM task_submit
              WHERE task_number = #{taskNumber} AND student_number = #{studentNumber}
             )
           , #{originalFileName}
           , #{saveFileName}
           ,#{fileSize}
        )
    </insert>

    <!-- 제출한 파일 조회  -->
    <select id="studentTaskSubjectFile" resultType="AttachmentFileVO">
        SELECT *
        FROM attachment_file
        WHERE task_submit_number = (SELECT task_submit_number
                                    FROM task_submit
                                    WHERE task_number = #{taskNumber} AND student_number = #{studentNumber})
    </select>

    <!-- 제출한 파일 삭제 -->
    <delete id="studentSubmissionFileDelete">
        DELETE attachment_file
        WHERE task_submit_number = (SELECT task_submit_number
                                    FROM task_submit
                                    WHERE task_number = #{taskNumber} AND student_number = #{studentNumber})
    </delete>

</mapper>









