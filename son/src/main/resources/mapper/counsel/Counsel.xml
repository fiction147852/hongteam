<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.son.app.counsel.mapper.CounselMapper">

	<!-- 상담 일정 전체 조회 -->
	<select id="counselSelectAll" resultType="CounselVO">
		SELECT counsel_number
		, parent_name
		, student_name
		, phone
		, time_code
		, reservation_date
		, reservation_code
		FROM admission_counsel
	</select>

	<!-- 상담 일정 단건 조회 -->
	<select id="counselSelectInfo" resultType="CounselVO">
		SELECT counsel_number
		, parent_name
		, student_name
		, phone
		, time_code
		, reservation_date
		, reservation_code
		, content
		FROM admission_counsel
		WHERE counsel_number = #{counselNumber}
	</select>



	<!-- 주간 시간 조회 -->
	<select id="counselWeekTimeSelectAll"
		resultType="AdmissioncounselPossibilityVO">
		SELECT weekdays_code
		, time_code
		FROM admission_counsel_possibility
	</select>

	<!-- 주간 시간 설정 -->
	<update id="counselWeekTimeUpdate"
		parameterType="AdmissioncounselPossibilityVO">
		UPDATE admission_counsel_possibility
		SET
		time_code = #{timeCode}
		WHERE weekdays_code = #{weekdaysCode}
	</update>


	<!-- 일간 상담 조회 ====================== -->
	<select id="counselDayTimeSelectAll"
		resultType="AdmissioncounselPossibilityVO">
		SELECT weekdays_code
		, time_code
		FROM counsel_impossibility
	</select>


	<!-- 그날 불가능한 시간조회 -->
	<select id="counselDayImpSelect" resultType="String"
		parameterType="CounselImpossibilityVO">
		SELECT time_code
		FROM counsel_impossibility
		WHERE
		reservation_date = #{reservationDate}
	</select>

	<!-- 그날 가능한 시간대 조회 -->
	<select id="counselDayPos" resultType="String"
		parameterType="AdmissionCounselPossibilityVO">
		SELECT time_code
		FROM admission_counsel_possibility
		WHERE
		weekdays_code = #{weekdaysCode}

	</select>

	<!-- 일간 상담 설정 -->
	<update id="counselDayTimeUpdate"
		parameterType="CounselImpossibilityVO">
		MERGE INTO counsel_impossibility ci
			USING (SELECT #{reservationDate} reservation_date,
						  #{timeCode} time_code
				   FROM dual) src
			ON ( ci.reservation_date = src.reservation_date AND
				 ci.time_code = src.time_code)
		WHEN MATCHED THEN
			UPDATE
				SET
			weekdays_code = ''
		WHERE reservation_date= src.reservation_date AND
		time_code = src.time_code

		DELETE WHERE
			reservation_date= src.reservation_date AND
			time_code = src.time_code
		WHEN NOT MATCHED THEN
			INSERT (
				impossibility_number,
				time_code,
				reservation_date
				)
			VALUES
				(NVL(
					(SELECT /*+ INDEX_DESC(ci XPK불가능_시간) */
							ci.impossibility_number
					FROM counsel_impossibility ci
					WHERE rownum = 1), 0) +1,
				src.time_code,
				src.reservation_date
		)
	</update>



	<select id="counImpTime" resultType="counselVO" parameterType="counselVO">
		SELECT *
			FROM(
				SELECT time_code
				FROM admission_counsel
				WHERE reservation_date = TO_DATE(#{reservationDate}, 'YY/MM/DD')
			UNION
				SELECT time_code
				FROM counsel_impossibility
				WHERE reservation_date = TO_DATE(#{reservationDate}, 'YY/MM/DD')
			MINUS
				SELECT time_code
				FROM admission_counsel
				WHERE counsel_number = #{counselNumber})
		ORDER BY time_code
	</select>










	<!-- 상담 일정 신청 -->
	<select id="counselInsert" resultType="CounselVO">
		INSERT INTO
		admission_counsel
		(
		counsel_number
		, parent_name
		, student_name
		, phone
		,
		time_code
		, reservation_date
		, content
		)
		VALUES
		(
		#{counselNumber}
		,
		#{parentName}
		, #{studentName}
		, #{phone}
		, #{timeCode}
		,
		#{reservationDate}
		, #{content}
		)

	</select>

	<!-- 상담 수정 -->
	<update id="counselUpdateInfo" parameterType="CounselVO">
		UPDATE admission_counsel
			SET 
				time_code = #{timeCode},
				reservation_date = #{reservationDate},
				reservation_code = #{reservationCode},
				content = #{content}
		WHERE counsel_number = #{counselNumber}
	</update>




</mapper>
